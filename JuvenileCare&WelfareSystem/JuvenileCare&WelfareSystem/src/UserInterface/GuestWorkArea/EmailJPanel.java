/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.GuestWorkArea;

import java.awt.CardLayout;
import java.io.File;
import java.util.Properties;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.activation.DataHandler;
import javax.activation.DataSource;
import javax.activation.FileDataSource;
import javax.mail.BodyPart;
import javax.mail.Message;
import javax.mail.MessagingException;
import javax.mail.Multipart;
import javax.mail.Session;
import javax.mail.Transport;
import javax.mail.internet.InternetAddress;
import javax.mail.internet.MimeBodyPart;
import javax.mail.internet.MimeMessage;
import javax.mail.internet.MimeMultipart;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 *
 * @author anish
 */
public class EmailJPanel extends javax.swing.JPanel {

    /**
     * Creates new form EmailJPanel
     */
    private JPanel userProcessContainer;
    private File file;

    public EmailJPanel(JPanel userProcessContainer) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblFrom = new javax.swing.JLabel();
        txtFldFrom = new javax.swing.JTextField();
        lblMessage = new javax.swing.JLabel();
        btnBack = new javax.swing.JButton();
        txtFldSubject = new javax.swing.JTextField();
        lblPassword = new javax.swing.JLabel();
        btnSendEmail = new javax.swing.JButton();
        lblTo = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtAreaMessage = new javax.swing.JTextArea();
        lblSubject1 = new javax.swing.JLabel();
        passFld = new javax.swing.JPasswordField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtFldFileChooser = new javax.swing.JTextField();
        btnFileChooser = new javax.swing.JButton();

        setBackground(new java.awt.Color(204, 204, 255));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblFrom.setText("From:");
        add(lblFrom, new org.netbeans.lib.awtextra.AbsoluteConstraints(42, 117, -1, -1));
        add(txtFldFrom, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 110, 560, -1));

        lblMessage.setText("Message:");
        add(lblMessage, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 260, -1, -1));

        btnBack.setText("Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });
        add(btnBack, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 530, -1, -1));

        txtFldSubject.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtFldSubjectActionPerformed(evt);
            }
        });
        add(txtFldSubject, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 150, 560, -1));

        lblPassword.setText("Password:");
        add(lblPassword, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 190, -1, -1));

        btnSendEmail.setText("Send");
        btnSendEmail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSendEmailActionPerformed(evt);
            }
        });
        add(btnSendEmail, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 530, -1, -1));

        lblTo.setText("To:");
        add(lblTo, new org.netbeans.lib.awtextra.AbsoluteConstraints(42, 79, -1, -1));

        txtAreaMessage.setColumns(20);
        txtAreaMessage.setLineWrap(true);
        txtAreaMessage.setRows(5);
        txtAreaMessage.setWrapStyleWord(true);
        jScrollPane1.setViewportView(txtAreaMessage);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 300, 613, 192));

        lblSubject1.setText("Subject:");
        add(lblSubject1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 150, -1, -1));
        add(passFld, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 190, 200, -1));

        jLabel1.setText("juviecare123@gmail.com");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 80, -1, -1));

        jLabel2.setText("Attachment:");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 230, -1, -1));

        txtFldFileChooser.setEditable(false);
        add(txtFldFileChooser, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 230, 390, -1));

        btnFileChooser.setText("Select File");
        btnFileChooser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFileChooserActionPerformed(evt);
            }
        });
        add(btnFileChooser, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 230, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_btnBackActionPerformed

    private void txtFldSubjectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtFldSubjectActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtFldSubjectActionPerformed

    private void btnSendEmailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSendEmailActionPerformed
        try {
            // TODO add your handling code here:

            sendEmail();
        } catch (MessagingException ex) {
            JOptionPane.showMessageDialog(null, "Something went wrong. "
                    + "\n Email could not be sent. "
                    + "\n Please check your credentials and mail settings ", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
    }//GEN-LAST:event_btnSendEmailActionPerformed

    private void btnFileChooserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFileChooserActionPerformed
        // TODO add your handling code here:
        // open file upload .
        JFileChooser fileChooser = new JFileChooser();
        int result = fileChooser.showOpenDialog(this);
        if (result == JFileChooser.APPROVE_OPTION) { // if user selects a file
            file = fileChooser.getSelectedFile();
            String selectedFile = file.getAbsolutePath();
            String fileExtension = selectedFile.substring(selectedFile.lastIndexOf('.') + 1);
            if (fileExtension.equalsIgnoreCase("jpg")
                    || fileExtension.equalsIgnoreCase("jpeg")
                    || fileExtension.equalsIgnoreCase("png")
                    || fileExtension.equalsIgnoreCase("doc")
                    || fileExtension.equalsIgnoreCase("docx")
                    || fileExtension.equalsIgnoreCase("pdf")
                    || fileExtension.equalsIgnoreCase("xlsx")) {
                txtFldFileChooser.setText(selectedFile);
            } else {
                passFld.setText("");
                JOptionPane.showMessageDialog(null, "Unsupported file format. Select image, document or excel file", "Warning", JOptionPane.WARNING_MESSAGE);
                txtFldFileChooser.setText("");
                return;
            }

        } else { // if user clicks on cancel
            fileChooser.cancelSelection();
        }
    }//GEN-LAST:event_btnFileChooserActionPerformed

    public void sendEmail() throws MessagingException {

        String to = "juviecare123@gmail.com";
        String from = txtFldFrom.getText();
        char[] passwordCharArray = passFld.getPassword();
        String password = String.valueOf(passwordCharArray);
        String message = txtAreaMessage.getText();
        String subject = txtFldSubject.getText();

        String selectedFile = txtFldFileChooser.getText();
        String fileName = selectedFile;
        fileName = fileName.substring(fileName.lastIndexOf('\\') + 1);

        if (from.equals("")) {
            JOptionPane.showMessageDialog(null, "Enter value in from field", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        } else if (password.equals("")) {
            JOptionPane.showMessageDialog(null, "Enter value in password field", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }

        // validate email
        String regex = "(^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\\.[a-zA-Z0-9-.]+$)";
        Pattern emailPattern = Pattern.compile(regex);
        Matcher toMatcher = emailPattern.matcher(to);
        Matcher fromMatcher = emailPattern.matcher(from);

        if (!toMatcher.matches()) {
            JOptionPane.showMessageDialog(null, "Invalid email address in to field", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }

        if (!fromMatcher.matches()) {
            JOptionPane.showMessageDialog(null, "Invalid email address in from field", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }

        Properties mailServerProperties = System.getProperties();
        mailServerProperties.put("mail.smtp.port", "587");
        mailServerProperties.put("mail.smtp.auth", "true");
        mailServerProperties.put("mail.smtp.starttls.enable", "true");
        // System.out.println("Mail Server Properties have been setup successfully..");

        MimeMessage generateMailMessage;
        // Step2
        // System.out.println("\n\n 2nd ===> get Mail Session..");
        Session getMailSession = Session.getDefaultInstance(mailServerProperties, null);
        generateMailMessage = new MimeMessage(getMailSession);
        generateMailMessage.addRecipient(Message.RecipientType.TO, new InternetAddress(to));
        //generateMailMessage.addRecipient(Message.RecipientType.CC, new InternetAddress("singhekta1291@gmail.com"));
        generateMailMessage.setSubject(subject);
        BodyPart messageBodyPart = new MimeBodyPart();
        String emailBody = message + "\n\n Regards, \n NGO Child Care System";
        //generateMailMessage.setText(emailBody);
        messageBodyPart.setText(emailBody);

        // Create a multipar message
        Multipart multipart = new MimeMultipart();
        multipart.addBodyPart(messageBodyPart);
        if (!fileName.equals("")) {
            // Part two is attachment
            messageBodyPart = new MimeBodyPart();
            // Set text message part
            //multipart.addBodyPart(messageBodyPart);
            DataSource source = new FileDataSource(selectedFile);
            messageBodyPart.setDataHandler(new DataHandler(source));
            messageBodyPart.setFileName(fileName);
            multipart.addBodyPart(messageBodyPart);
        }
        generateMailMessage.setContent(multipart);

        System.out.println("Mail Session has been created successfully..");

        // Step3
        // System.out.println("\n\n 3rd ===> Get Session and Send mail");
        Transport transport = getMailSession.getTransport("smtp");

        // Enter your correct gmail UserID and Password
        // if you have 2FA enabled then provide App Specific Password
        transport.connect("smtp.gmail.com", from, password);
        transport.sendMessage(generateMailMessage, generateMailMessage.getAllRecipients());
        transport.close();
        JOptionPane.showMessageDialog(null, "Email sent successfully", "Information", JOptionPane.INFORMATION_MESSAGE);
        txtAreaMessage.setText("");
        txtFldFrom.setText("");
        txtFldSubject.setText("");
        txtFldFileChooser.setText("");
        txtAreaMessage.setText("");
        passFld.setText("");

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnFileChooser;
    private javax.swing.JButton btnSendEmail;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblFrom;
    private javax.swing.JLabel lblMessage;
    private javax.swing.JLabel lblPassword;
    private javax.swing.JLabel lblSubject1;
    private javax.swing.JLabel lblTo;
    private javax.swing.JPasswordField passFld;
    private javax.swing.JTextArea txtAreaMessage;
    private javax.swing.JTextField txtFldFileChooser;
    private javax.swing.JTextField txtFldFrom;
    private javax.swing.JTextField txtFldSubject;
    // End of variables declaration//GEN-END:variables
}
